# If you use the Mee6 Leaderboard you can import the leaderboard data to cypher139's Discord bot, then discontinue Mee6 usage if desired
admin:/importmee6lb [$guild] [$] = >>>
@name = 'Discord'
@guild = 0
@args = parse_args($)
@prefix = 'DiscordBot'
@botconfig = import('DiscordBot.config.Bot')

if(array_contains(@args, 'help')) {
	msg('This imports the Mee6 Leaderboard data to CH storage, for use with a CH based leaderboard ranking system.')
	msg('Specify the Mee6 server ID to use after the command. ex. if your leaderboard link is "https://mee6.xyz/en/leaderboard/123456" the server ID is "123456".')
	die()
}

proc _convert_json_data(@raw, @guild) {
	@json = json_decode(@raw)
	@botconfig = import('DiscordBot.config.Bot')
	@config = import('DiscordBot.config.'.@guild)
	@newLeaderboard = array('Guild_Name': @config['LB_Options']['Guild_Name'], 'lastedit': time(), 'members': array(), 'options': '', 'guild': @json['guild'])
	foreach(@i: @user in @json['players']) {
		@userid = @json['players'][@i]['id']
		array_set(@newLeaderboard['members'], @userid, @user)
	# Remove settings unused by DiscordBot
		array_remove(@newLeaderboard['members'][@userid], 'guild_id')
		array_remove(@newLeaderboard['members'][@userid], 'id') 
		# ID is given via array index
		array_remove(@newLeaderboard['members'][@userid], 'is_monetize_subscriber')
		array_remove(@newLeaderboard['members'][@userid], 'monetize_xp_boost')
	# Mee6's detailed_xp:
	# 0 - User's Total XP - current level's XP (i.e. XP earned on this rank level)
	# 1 - Total of XP needed to earn next level up
	# 2 - User's Total XP
	# DiscordBot will recalculate this when needed
		array_set(@newLeaderboard['members'][@userid], 'mee6_xp', @json['players'][@i]['detailed_xp'][2])
		array_remove(@newLeaderboard['members'][@userid], 'detailed_xp')
	# Rename indexes to shorter names
		array_set(@newLeaderboard['members'][@userid], 'tag', @json['players'][@i]['discriminator'])
		array_set(@newLeaderboard['members'][@userid], 'msg_count', @json['players'][@i]['message_count'])
		array_remove(@newLeaderboard['members'][@userid], 'discriminator')
		array_remove(@newLeaderboard['members'][@userid], 'message_count')
		array_set(@newLeaderboard['members'][@userid], 'last_msg', 0)
	}
	@rr = array('XP_Per_Message': @json['xp_per_message'], 'XP_Gain_Rate': @json['xp_rate'], 'Role_Rewards': array())
	foreach(@j: @role in @json['role_rewards']) {
		array_set(@rr['Role_Rewards'], integer(@role['rank']), array('RoleID': integer(@role['role']['id']), 'RoleName': @role['role']['name']))
	}
	@newLeaderboard['options'] = @rr
	if(array_index_exists(@json, 'user_guild_settings')) {
		array_set(@newLeaderboard['guild'], 'mee6_user_guild_settings', @json['user_guild_settings'])
	}
	#avatar:	https://cdn.discordapp.com/avatars/<USERID>/<AVATARID under {avatar: 123}>.webp?size=512
	msg('Leaderboard size: '.array_size(@newLeaderboard['members'])) 
	export('DiscordBot.'.@guild.'.Leaderboard', @newLeaderboard);
	store_value('DiscordBot.'.@guild.'.Leaderboard', @newLeaderboard);
	_write_file(import('DiscordBot.logs.dir').'/'.@guild.'/Converted-Mee6-Leaderboard-'.@json['guild']['name'].'.json', json_encode(@newLeaderboard), 'OVERWRITE')
	_write_file(import('DiscordBot.logs.dir').'/'.@guild.'/Converted-Mee6-RoleRewards-Config-'.@json['guild']['name'].'.yml', yml_encode(@rr, true), 'OVERWRITE')
	msg('The import of '.@json['guild']['name'].'\'s Leaderboard was successful.')
	msg('You will need to add the Role Rewards configuration manually to the DiscordBot Guild Config file. A config file was provided to copypaste from.')
	return(true)
}
#Guild ID Setup
if(!is_numeric($guild)) {
	@guildNick = import('DiscordBot.Guilds.Nicknames', array())
	switch(to_lower($guild)) {
	case 'default':
	case 'primary':
	case 'local':
	case '-':
		@guild = @botconfig['Primary_Guild']
	default:
		foreach(@sid: @nick in @guildNick) {
			if(to_lower($guild) == to_lower(@nick)) {
				@guild = @sid
				break()
			}
		}
	}
} else if(length($guild) > 15) {
	if(array_contains(import('DiscordBot.Guilds', array()), $guild)) {
		@guild = $guild
	}
}
if(!is_numeric(@guild) || @guild <= 0) { die(color(12).'['.@prefix.'] Guild is not recognized by DiscordBot. Check the Server ID or nickname given.') }
@config = import('DiscordBot.config.'.@guild)
#Actions
if($guild == 'local') { 
# Import from a local file, only supports importing into Primary Guild!
	try { 
		@LeaderboardData = import('DiscordBot.config.dir').'/Guilds/Import_Leaderboard_'.@guild.'.json'
	} catch(Exception @ex) {
		die(@ex['message'])
	}
	_write_file(import('DiscordBot.logs.dir').'/'.@guild.'/Mee6-Leaderboard-'.@LeaderboardData['guild']['name'].'.json', @LeaderboardData, 'OVERWRITE')
	_convert_json_data(@LeaderboardData, @guild)
	die()
}
	
if(array_contains(@args, 'view')) {
	msg(get_value('DiscordBot.'.@guild.'.Leaderboard'))
	die()
}

http_request('https://mee6.xyz/api/plugins/levels/leaderboard/'.@guild.'?limit=999&page=0', array('blocking': true, 'success': closure(@data) {
	if(@data['error'] == true) {
		if(@data['responseCode'] == 404) {
			die('Guild "'.@guild.'" was not found.')
		}
		msg('No relevant data received from server, did you typo the server ID?')
		export('DiscordBot.debug.http.error', @data)
		return(false)
	} else {
		_write_file(import('DiscordBot.logs.dir').'/'.@guild.'/Mee6-Leaderboard-'.json_decode(@data['body'])['guild']['name'].'.json', @data['body'], 'OVERWRITE')
		_convert_json_data(@data['body'], @guild)
		return(true)
	}
}));
<<<