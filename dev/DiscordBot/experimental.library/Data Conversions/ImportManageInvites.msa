# This imports the MangaeInvite bot server invite data, for use with a CH based invite log system. Requires manual additions of codes to the import json file.
# If you are using the ManageInvite bot, you can visit their API, download a json of your current invite data, add the relevant invite codes to each array, and then use this command to finish importing into cypher139's Discord bot
admin:/importmi [$guild] [$] = >>>
@name = 'Discord'
@guild = 0
@prefix = 'DB Import Invites'
@args = parse_args($)
@config = import('DiscordBot.config.Bot')
if(array_contains(@args, 'help')) {
	msg('This imports the MangaeInvite bot server invite data, for use with a CH based invite log system. Requires manual additions of codes.')
	die()
}
#Guild ID Setup
if(!is_numeric($guild)) {
	@guildNick = import('DiscordBot.Guilds.Nicknames', array())
	switch(to_lower($guild)) {
	case 'default':
	case 'primary':
	case '-':
		@guild = @botconfig['Primary_Guild']
	default:
		foreach(@sid: @nick in @guildNick) {
			if(to_lower($guild) == to_lower(@nick)) {
				@guild = @sid
				break()
			}
		}
	}
} else if(length($guild) > 15) {
	if(array_contains(import('DiscordBot.Guilds', array()), $guild)) {
		@guild = $guild
	}
}
if(!is_numeric(@guild) || @guild <= 0) { die(color(12).'['.@prefix.'] Guild is not recognized by DiscordBot. Check the Server ID or nickname given.') }
@config = import('DiscordBot.config.'.@guild)

@importedData = array()
	try { 
		@importedData = json_decode(read(import('DiscordBot.config.dir').'/response_mi_'.@guild.'.json'))['data']
	} catch(Exception @ex) {
		die(@ex['message'])
	}
_db_msg_Console(@importedData, @guild, 'debug')
if(@importedData[0]['guildID'] != @id) {
	die(color(12).'['.@prefix.'] Guild given does not match Guild in imported data! Check the Server ID given in the json filename.')
}

#code
# uses = regular
# leaves = leaves
# inviter = username
# userid = userID
@inv = array()
foreach(@i: @data in @importedData) {
	if(!array_index_exists(@data, 'code')) {
		msg('Cannot import index '.@i.' from user '.@data['userID'].', no code given. ['.@data['regular'].' - '.@data['leaves'].']') 
		continue()
	}
	if(!array_index_exists(@inv, @data['code'])) { array_set(@inv, @data['code'], array()) }
	array_set(@inv[@data['code']], 'code', @data['code'])
	if(array_index_exists(@data, 'leaves')) { array_set(@inv[@data['code']], 'leaves', @data['leaves']) }
	if(array_index_exists(@data, 'userID')) { array_set(@inv[@data['code']], 'userid', @data['userID']) }
	if(array_index_exists(@data, 'username')) { array_set(@inv[@data['code']], 'username', @data['username']) }
	if(array_index_exists(@data, 'regular')) { array_set(@inv[@data['code']], 'uses', @data['regular']) }
}
msg(color(10).'Imported saved ManageInvite bot data'.color('r').', now checking current invites:')
try {
	discord_retrieve_invites(@id, closure(@raw) { 
		foreach(@i: @invite in @raw) {
			if(array_index_exists(@inv, @invite['code'])) {
				array_set(@inv[@invite['code']], 'uses', @invite['uses'])
				array_set(@inv[@invite['code']], 'max_uses', @invite['max_uses'])
				array_set(@inv[@invite['code']], 'channelid', @invite['channelid'])	
			} else { array_set(@inv, @invite['code'], @invite) }
		}
		store_value('DiscordBot.'.@id.'.Invites', @inv)
		msg(color(10).'Current Invite data added and saved.')
	});
} catch(InsufficientPermissionException @ex) {
	if(string_ends_with(@ex['message'], 'MANAGE_SERVER')) {
		msg(color('c').'Sorry, bot does not have permission to view invites!')
		store_value('DiscordBot.'.@id.'.Invites', @inv)
	} else {
		die(@ex['message'])
	}
} catch(Exception @ex) {
	die('[importmi] '.@ex['message'], false)
}
<<<