#version 1.1-tmc
#requires build #84
admin:/dbdbg [$action] [$] = >>>
@name = 'Discord'
@prefix = '['.@name.'] '
@args = parse_args($)
@action = to_lower(string($action))
@botconfig = import('DiscordBot.config.Discord')
@guilds = import('DiscordBot.Guilds')
@guild = @botconfig['Primary_Guild']
foreach(@arg in @args) {
	if(array_contains(@guilds, @arg)) {
		@guild = @arg
		array_remove_values(@args, @arg)
		break()
	}
}
msg('Using Server ID: '.@guild)
switch(@action) {
case 'lbu':
	@leaderboard = import('DiscordBot.'.@guild.'.Leaderboard')
	if(!is_array(@leaderboard)) { die()}
	foreach(@k: @v in @leaderboard['members']) {
		if(array_index_exists(@v, 'detailed_xp')) {
			array_set(@leaderboard['members'][@k], 'mee6_xp', @v['detailed_xp'][2])
			array_remove(@leaderboard['members'][@k], 'detailed_xp')
		}
		if(!array_index_exists(@v, 'all_xp')) {
			# array_remove(@leaderboard['members'][@k], 'all_xp')
			array_set(@leaderboard['members'][@k], 'all_xp', array(0,0,@v['xp']))
		}
	}
case 'backup':
	_discordBot_backup_members();
case 'update':
	@startTime = time();
	msg(color('a').'Updating DiscordBot\'s internal cache data for each guild...')
	_discordBot_update_members();
	@stats = import('DiscordBot.debug.stats.last.updatemembers')
	if(is_array(@stats)) {
		foreach(@guild: @data in @stats) {
			msg('Guild: '.@guild)
			foreach(@k: @v in @data) {
				if(is_array(@v) || @v > 0) {
					msg(@k.': '.@v)
				}
			}
		}
	}
	@timeElapsed = time() - @startTime;
	msg(color(3).'Time elapsed: '.@timeElapsed.'ms.')
case 'removeinvite':
	@previnv = get_value('DiscordBot.'.@guild.'.Join.info')
	@inv = get_value('DiscordBot.'.@guild.'.Invites')
	if(is_array(@previnv[@args[0]]['code'])) {
		if(array_index_exists(@previnv, @args[0], 'code', 1)) {
			array_remove_values(@previnv[@args[0]]['code'], @args[1])
			msg(color('a').'Removed invite code '.@args[1].' from ID '.@args[0])
		} else {
			msg(color('e').'Only one code exists, are you sure you want to remove this code?')
		}
		if(array_size(@previnv[@args[0]]['code']) == 1) {
			@invid = discord_member_info(@guild, @inv[array_implode(@previnv[@args[0]]['code'], '')]['userid'])
			@previnv[@args[0]]['inviter'] = @invid['username']
			@previnv[@args[0]]['inviterid'] = @invid['userid']
			@previnv[@args[0]]['code'] = array_implode(@previnv[@args[0]]['code'], '')
		}
		store_value('DiscordBot.'.@guild.'.Join.info', @previnv)
	} else {
		msg(color('c').'Only one code exists, are you sure you want to remove this code?')
	}
case 'memberinfo':
	if(!array_index_exists(@args, 0)) { die(color('c').'Specify the Discord user ID to view!') }
	@gmr = discord_member_info(@guild, @args[0])
	msg(color('a').'Member info:')
	msg(@gmr)
case 'getmembers':
	@gmr = discord_get_members(@guild)
	msg('All members:')
	msg(@gmr)
case 'getmemberroles':
case 'gmr':
	if(!array_index_exists(@args, 0)) { die(color('c').'Specify the Discord role ID to view!') }
	@gmr = discord_get_members_with_role(@guild, @args[0])
	msg(color('a').'Members with role "'.@args[0].'":')
	msg(@gmr)
case 'viewinvites':
	discord_retrieve_invites(@guild, closure(@ex) { 
		console(@ex) 
		store_value('DiscordBot.debug.invites.save', @ex)
		_write_file(import('DiscordBot.logs.dir').'/'.@guild.'/Raw-Invites.yml', yml_encode(@ex, true), 'overwrite')
	});
default:
msg('Action Not Recognized!')	
}
<<<