# Commands to change the formatting for chat

#todo:
# randcolor: select 1 random color to color message with.
# global options: toggle display name, change begin and end characters for healthbar, group, user.
# group nickname, prefix, suffix
# captialize first letter in chat, user & global option
#caps check, user and global option
#chpe: prefix suffix

everyone:/chat [$action] [$option1] [$option2] [$option3] [$option4] = >>>
# What is the name of this script?
assign(@name, 'Chat')
# Include required backend functions
include('includes.library/chatfunctions.ms')


assign(@action, to_lower($action))
assign(@option1, $option1)
assign(@option2, $option2)
assign(@option3, $option3)
assign(@option4, $option4)
assign(@player, _getplayerID(player()))

#Action list help: This appears on /chat, or when a unsupported action variable is passed
proc _chat_help() {
	msg(color(6).'Chat: Help:')
	msg(color('a').'Command usage: <required> [optional]')
	msg(color('a').'/chat <action> [option1] [option2] [option3] [option4]')
	msg(color(6).'Actions:')
	msg(color(7).'/chat setcolor <type> <color code>'.color(4).' - '.color('f').'Allows you to set your username color, or default chat color.')
	msg(color(7).'/chat view'.color(4).' - '.color('f').'Allows you to view your set options and colors.')
	msg(color(7).'/chat toggle <option>'.color(4).' - '.color('f').'Toggle various options, such as \'colorize\' which changes chat color where a color code is typed, or using a random color each time you chat.')
}

switch(@action) {

case 'help':
case '-h':
case '?':
case '/?':
	_chat_help()
	die()

case 'setcolor':
case 'set':
case 's':
	#The next options require a valid color code.
	assign(@color, strip_colors(@option2))
	if(reg_count('^(&.*)', @color) > 0, null,
		assign(@color, '&'.@color)
	)
	if(reg_match('^&[a-fA-f0-9]$', @color), null,
		msg(color('c').'['.color(7).@name.color('c').'] '.color('c').'Invalid color code specified! '.color('f').'Use this list to figure out what color you would like, then re-type the command with your new color.')
		call_alias(/colors)
		die()
	)
    assign(@newc, reg_split('&', @color))
	switch(@option1) {
	case 'username':
	case 'user':
	case 'u':
		assign(@oldcolor, get_value(@name.'.player.'.@player['id'].'.chat.format.colors.username'))
		if(@oldcolor == '' || @oldcolor == null, assign(@oldcolor, 'f'))
		assign(@usernamecolor, @newc[1])
		if(@oldcolor == @newc[1],
			die(color('e').'['.color(7).@name.color('e').'] '.color(7).'Your username color is already '.color(@oldcolor).'&'.@oldcolor.color(7).'!')
		)
		store_value(@name.'.player.'.@player['id'].'.chat.format.colors.username', @usernamecolor)
		export(@name.'.player.'.@player['id'].'.chat.format.colors.username', @usernamecolor)
		msg(color('a').'['.color(7).@name.color('a').'] '.color(7).'Your previous username color was: '.color(@oldcolor).'&'.@oldcolor.color(7).', and is now: '.color(@newc[1]).@color)
		die()
	
	case 'chat':
	case 'c':
		assign(@oldcolor, get_value(@name.'.player.'.@player['id'].'.chat.format.colors.chat'))
		if(@oldcolor == '' || @oldcolor == null, assign(@oldcolor, 'f'))
		assign(@usernamecolor, @newc[1])
		if(@oldcolor == @newc[1],
			die(color('e').'['.color(7).@name.color('e').'] '.color(7).'Your default chat color is already '.color(@oldcolor).'&'.@oldcolor.color(7).'!')
		)
		store_value(@name.'.player.'.@player['id'].'.chat.format.colors.chat', @usernamecolor)
		export(@name.'.player.'.@player['id'].'.chat.format.colors.chat', @usernamecolor)
		msg(color('a').'['.color(7).@name.color('a').'] '.color(7).'Your previous chat color was: '.color(@oldcolor).'&'.@oldcolor.color(7).', and is now: '.color(@newc[1]).@color)
		die()
	default:
		msg(color('c').'['.color(7).@name.color('c').'] '.color('c').'No color code was specified!')
	}


case 'view':
case 'v':
	msg(color(6).'['.color(7).@name.color(6).'] '.color('b').'Chat settings for: '.color('a').@player['display'])
	assign(@usercolor, get_value(@name.'.player.'.@player['id'].'.chat.format.colors.username'))
	if(@usercolor == '' || @usercolor == null,
		assign(@usercolor, 'f') assign(@say, 'Unset')
	,
		assign(@say, '&'.@usercolor)
	)
	msg(color(6).'['.color(7).@name.color(6).'] '.color(7).'Username color: '.color(@usercolor).@say)
	assign(@chatcolor, get_value(@name.'.player.'.@player['id'].'.chat.format.colors.chat'))
	if(@chatcolor == '' || @chatcolor == null,
		assign(@chatcolor, 'f') assign(@say, 'Unset')
	,
		assign(@say, '&'.@chatcolor)
	)
	msg(color(6).'['.color(7).@name.color(6).'] '.color(9).'Chat color: '.color(@chatcolor).@say)
	assign(@colorize, get_value(@player.'.chat.format.colorize'))
	if(@colorize == true || @colorize == '' || @colorize == null,
		assign(@ccolor, 'a') assign(@say, 'Yes')
	,
		assign(@ccolor, 'c') assign(@say, 'No')
	)
	msg(color(6).'['.color(7).@name.color(6).'] '.color(7).'Colorize color codes in chat: '.color(@ccolor).@say)
	if(has_permission(@player['name'], 'commandhelper.alias.chat.use.randcolor'),
		assign(@rc, get_value(@name.'.player.'.@player['id'].'.chat.format.colorize'))
		if(@rc == true || @rc == '' || @rc == null ,
			assign(@rccolor, 'a') assign(@say, 'Yes')
		,
			assign(@rccolor, 'c') assign(@say, 'No')
		)
		msg(color(6).'['.color(7).@name.color(6).'] '.color(9).'Random starting color in chat: '.color(@rccolor).@say)
	)
	if(has_permission(@player['name'], 'commandhelper.alias.chat.use.rainbow'),
		assign(@rainbow, get_value(@name.'.player.'.@player['id'].'.chat.rainbow.toggle'))
		if(@rainbow == true || @rainbow == '' || @rainbow == null,
			assign(@racolor, 'a') assign(@say, 'Yes')
		,
			assign(@racolor, 'c') assign(@say, 'No')
		)
		msg(color(6).'['.color(7).@name.color(6).'] '._rainbow('Rainbow chat: ', 'doubles').color(@racolor).@say)
	)
	die()



case 'toggle':
case 't':
case 'switch':
	switch(@option1) {
	case 'colorize':
	case 'c':
		if(get_value(@name.'.player.'.@player['id'].'.chat.format.colorize') == true) {
			@newsetting = false
			@successmsg = color(6).'['.color(7).@name.color(6).'] '.color(6).'Color codes will display &aas the &ecode in &9chat!'
		} else {
			@newsetting = true
			@successmsg = color(6).'['.color(7).@name.color(6).'] '.colorize('Color codes will display &ain the specified &ecolor in &9chat!')
		}
		store_value(@name.'.player.'.@player['id'].'.chat.format.colorize', @newsetting)
		export(@name.'.player.'.@player['id'].'.chat.format.colorize', @newsetting)
		die(@successmsg)
	default:
		msg(color('c').'['.color(6).@name.color('c').'] '.color('c').'Oops! That toggle action isn\'t supported!') 
	}
case '':
case null:
	msg(color('c').'['.color(6).@name.color('c').'] '.color('c').'No action specified.')
	_chat_help()
	die()
default:
	msg(color('c').'['.color(6).@name.color('c').'] '.color('c').'Oops! That action isn\'t supported!') 
	_chat_help() 
	die()
}
<<<